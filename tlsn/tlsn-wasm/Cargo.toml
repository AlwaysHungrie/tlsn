[package]
name = "tlsn-wasm"
version = "0.1.0-alpha.5"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = []
single-threaded = ["tlsn-utils-aio/single-threaded"]

[package.metadata.wasm-pack.profile.debug]
debug = false

[package.metadata.wasm-pack.profile.release]
opt-level = "z"
wasm-opt = true

[dependencies]
tlsn-core.workspace = true
tlsn-utils-aio.workspace = true
tlsn-prover = { workspace = true, features = ["tracing"] }
tlsn-tls-client-async.workspace = true
tlsn-verifier = { workspace = true, features = ["tracing"] }
tlsn-utils.workspace = true

wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
wasm-bindgen-rayon = "1.0"
web-sys = { version = "0.3", features = [
  "console",
  "BinaryType",
  "Blob",
  "ErrorEvent",
  "FileReader",
  "MessageEvent",
  "ProgressEvent",
  "WebSocket",
  "console",
  'Document',
  'HtmlElement',
  'HtmlInputElement',
  'Window',
  'Worker',
  'Headers',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response'
] }
js-sys = "0.3.64"

chrono = "0.4"
getrandom = { version = "0.2", features = ["js"] }
web-time = "1.0"
time = {version = "0.3.34", features = ["wasm-bindgen"]}
ring = { version = "0.17", features = ["wasm32_unknown_unknown_js"] }
ahash = "0.8.11"

tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["time"] }
tracing-web = "0.1.2"

serde = { workspace = true, features = ["derive"] }
serde_json = "1.0"
serde-wasm-bindgen = "0.6"

enum-try-as-inner = { version = "0.1" }
pin-project-lite = "0.2.4"

futures = "0.3"

hyper = { version = "1.1", features = ["client", "http1"] }
http-body-util = "0.1"

# Use the patched ws_stream_wasm to fix the issue https://github.com/najamelan/ws_stream_wasm/issues/12#issuecomment-1711902958
ws_stream_wasm = { version = "0.7.4", git = "https://github.com/tlsnotary/ws_stream_wasm", rev = "2ed12aad9f0236e5321f577672f309920b2aef51" }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7" }

[dev-dependencies]
wasm-bindgen-test = "0.3"
